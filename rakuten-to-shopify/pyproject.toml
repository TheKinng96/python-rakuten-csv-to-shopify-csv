[project]
name = "rakuten-to-shopify"
version = "2.0.0"
description = "Complete pipeline that transforms Rakuten product data to Shopify-ready CSV format"
authors = [
    {name = "Rakuten-Shopify Converter", email = "noreply@example.com"}
]
readme = "README.md"
requires-python = ">=3.9"
keywords = ["rakuten", "shopify", "csv", "ecommerce", "conversion"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",

    # HTML processing and cleaning
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "html5lib>=1.1",

    # Text processing and encoding
    "chardet>=5.1.0",

    # Progress and CLI utilities
    "tqdm>=4.64.0",
    "click>=8.1.0",

    # Configuration and validation
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "factory-boy>=3.2.0",
]

docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/example/rakuten-to-shopify"
Documentation = "https://github.com/example/rakuten-to-shopify#readme"
Repository = "https://github.com/example/rakuten-to-shopify.git"
Issues = "https://github.com/example/rakuten-to-shopify/issues"

[project.scripts]
rakuten-to-shopify = "rakuten_to_shopify.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/rakuten_to_shopify"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/pyproject.toml",
]

# Ruff configuration
[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# Black configuration
[tool.black]
target-version = ["py39"]
line-length = 100
include = '\.pyi?$'

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "beautifulsoup4.*",
    "lxml.*",
    "chardet.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]